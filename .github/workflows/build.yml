name: Build Flask-Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git zip unzip openjdk-17-jdk libssl-dev libffi-dev build-essential

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install buildozer cython

      - name: Set up Android SDK manually
        run: |
          # Create Android SDK directory
          mkdir -p $HOME/android-sdk
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export ANDROID_HOME=$ANDROID_SDK_ROOT
          
          # Download command line tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O /tmp/tools.zip
          unzip -q /tmp/tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
          
          # Add to PATH
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/build-tools/34.0.0" >> $GITHUB_PATH
          
          # Set environment variables
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV

      - name: Install Android packages
        run: |
          # Accept licenses first
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
          
          # Install required packages
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "build-tools;34.0.0" \
            "platforms;android-34" \
            "ndk;25.2.9519653"

      - name: Set up Buildozer directories with correct paths
        run: |
          # Create the directory structure that Buildozer expects
          mkdir -p ~/.buildozer/android/platform/android-sdk
          
          # Link the actual SDK to where Buildozer expects it
          ln -sfn $ANDROID_SDK_ROOT ~/.buildozer/android/platform/android-sdk
          
          # Create the old tools directory structure that Buildozer looks for
          mkdir -p ~/.buildozer/android/platform/android-sdk/tools/bin
          
          # Create a symlink for sdkmanager in the old location
          ln -sfn $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager ~/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager
          
          # Find and link NDK
          NDK_PATH=$(find $ANDROID_SDK_ROOT -name "ndk*" -type d | head -n 1)
          if [ -n "$NDK_PATH" ]; then
            echo "Linking NDK: $NDK_PATH"
            ln -sfn $NDK_PATH ~/.buildozer/android/platform/android-ndk
          else
            echo "Warning: NDK not found"
          fi

      - name: Build with Buildozer
        run: |
          # Build the APK with verbose output
          buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: bin/*.apk