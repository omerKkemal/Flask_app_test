name: Build Flask Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install System Dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            zip unzip openjdk-17-jdk python3-pip git \
            libssl-dev libffi-dev build-essential \
            autoconf automake libtool m4 pkg-config gettext \
            libltdl-dev libtool-bin

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install buildozer cython virtualenv

      - name: Setup Android SDK
        run: |
          mkdir -p $HOME/android-sdk
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export ANDROID_HOME=$ANDROID_SDK_ROOT

          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O /tmp/tools.zip
          unzip -q /tmp/tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest

          mkdir -p $ANDROID_SDK_ROOT/tools/bin
          ln -s $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/* $ANDROID_SDK_ROOT/tools/bin/

          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/tools/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/build-tools/34.0.0" >> $GITHUB_PATH

          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV

      - name: Install Android Packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager \
            "platform-tools" \
            "build-tools;34.0.0" \
            "platforms;android-34" \
            "ndk;25.2.9519653"

      - name: Setup Buildozer Directories
        run: |
          mkdir -p ~/.buildozer/android/platform
          ln -sfn $ANDROID_SDK_ROOT ~/.buildozer/android/platform/android-sdk
          NDK_PATH=$(find $ANDROID_SDK_ROOT -name "ndk*" -type d | head -n 1)
          if [ -n "$NDK_PATH" ]; then
            ln -sfn "$NDK_PATH" ~/.buildozer/android/platform/android-ndk
          fi

      - name: Create minimal configure.ac for libtool (if needed)
        run: |
          if [ ! -f "configure.ac" ] && [ ! -f "configure.in" ]; then
            echo "AC_INIT([dummy], [1.0])" > configure.ac
            echo "AM_INIT_AUTOMAKE" >> configure.ac
            echo "AC_PROG_CC" >> configure.ac
            echo "AC_PROG_LIBTOOL" >> configure.ac
            echo "AC_CONFIG_FILES([Makefile])" >> configure.ac
            echo "AC_OUTPUT" >> configure.ac
          fi

      - name: Create minimal Makefile.am (if needed)
        run: |
          if [ -f "configure.ac" ] && [ ! -f "Makefile.am" ]; then
            echo "SUBDIRS =" > Makefile.am
          fi

      - name: Setup libtool environment
        run: |
          export ACLOCAL_FLAGS="-I /usr/share/aclocal -I /usr/local/share/aclocal"
          export ACLOCAL_PATH="/usr/share/aclocal:/usr/local/share/aclocal"

          if [ -f "configure.ac" ]; then
            libtoolize --force --copy || true
            aclocal -I m4 || true
            autoconf || true
            automake --add-missing --copy || true
            autoreconf -vfi || true
          fi

      - name: Build APK with Buildozer
        run: |
          export ACLOCAL_FLAGS="-I /usr/share/aclocal -I /usr/local/share/aclocal"
          export ACLOCAL_PATH="/usr/share/aclocal:/usr/local/share/aclocal"

          if [ ! -f "buildozer.spec" ]; then
            buildozer init
          fi

          cp buildozer.spec buildozer.spec.backup || true

          sed -i 's/#android.ndk = 21/android.ndk = 25.2.9519653/' buildozer.spec || true
          sed -i 's/android.ndk = .*/android.ndk = 25.2.9519653/' buildozer.spec || true
          sed -i 's/#android.sdk = 20/android.sdk = 34/' buildozer.spec || true
          sed -i 's/android.sdk = .*/android.sdk = 34/' buildozer.spec || true
          sed -i 's/#p4a.branch = master/p4a.branch = develop/' buildozer.spec || true
          sed -i 's/p4a.branch = .*/p4a.branch = develop/' buildozer.spec || true

          echo "Starting buildozer build..."
          buildozer -v android debug 2>&1 | tee build.log

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: bin/*.apk

      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build.log