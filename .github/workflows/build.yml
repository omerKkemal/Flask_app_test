name: Build Flask-Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ANDROID_SDK_ROOT: $HOME/android-sdk
  ANDROID_HOME: $HOME/android-sdk
  BUILD_TOOLS_VERSION: "34.0.0"
  LEGACY_BUILD_TOOLS_VERSION: "30.0.3"
  NDK_VERSION: "25.2.9519653"
  ANDROID_PLATFORM: "android-34"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git zip unzip openjdk-17-jdk libssl-dev libffi-dev build-essential python3-pip

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install buildozer cython

      - name: Set up Android SDK
        run: |
          mkdir -p $ANDROID_SDK_ROOT
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O /tmp/tools.zip
          unzip -q /tmp/tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest

          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/build-tools/$BUILD_TOOLS_VERSION" >> $GITHUB_PATH

      - name: Install Android packages
        run: |
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "build-tools;${LEGACY_BUILD_TOOLS_VERSION}" \
            "build-tools;${BUILD_TOOLS_VERSION}" \
            "platforms;${ANDROID_PLATFORM}" \
            "ndk;${NDK_VERSION}"

      - name: Verify Aidl installation
        run: |
          find $ANDROID_SDK_ROOT/build-tools -name "aidl" -type f | head -5
          ls -la $ANDROID_SDK_ROOT/build-tools/ || echo "No build-tools directory"
          if [ -f "$ANDROID_SDK_ROOT/build-tools/${LEGACY_BUILD_TOOLS_VERSION}/aidl" ]; then
            echo "Aidl found in build-tools ${LEGACY_BUILD_TOOLS_VERSION}"
            $ANDROID_SDK_ROOT/build-tools/${LEGACY_BUILD_TOOLS_VERSION}/aidl --version || true
          fi
          if [ -f "$ANDROID_SDK_ROOT/build-tools/${BUILD_TOOLS_VERSION}/aidl" ]; then
            echo "Aidl found in build-tools ${BUILD_TOOLS_VERSION}"
            $ANDROID_SDK_ROOT/build-tools/${BUILD_TOOLS_VERSION}/aidl --version || true
          fi

      - name: Set up Buildozer directories
        run: |
          mkdir -p ~/.buildozer/android/platform/android-sdk
          ln -sfn $ANDROID_SDK_ROOT ~/.buildozer/android/platform/android-sdk
          mkdir -p ~/.buildozer/android/platform/android-sdk/tools/bin
          ln -sfn $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager ~/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager

          NDK_PATH=$(find $ANDROID_SDK_ROOT -name "ndk*" -type d | head -n 1)
          if [ -n "$NDK_PATH" ]; then
            echo "Linking NDK: $NDK_PATH"
            ln -sfn $NDK_PATH ~/.buildozer/android/platform/android-ndk
          else
            echo "Warning: NDK not found"
          fi

      - name: Create symlink for Aidl if missing
        run: |
          for version in "${BUILD_TOOLS_VERSION}" "${LEGACY_BUILD_TOOLS_VERSION}"; do
            if [ -f "$ANDROID_SDK_ROOT/build-tools/$version/aidl" ]; then
              echo "Found Aidl in build-tools $version"
              mkdir -p ~/.buildozer/android/platform/android-sdk/build-tools/$version/
              ln -sfn $ANDROID_SDK_ROOT/build-tools/$version/aidl ~/.buildozer/android/platform/android-sdk/build-tools/$version/aidl
              echo "Created symlink for Aidl from version $version"
              break
            fi
          done

      - name: Build with Buildozer
        run: |
          buildozer -v android debug

      - name: List generated files for debugging
        run: |
          ls -la
          ls -la bin/ 2>/dev/null || echo "No bin directory found"
          find . -name "*.apk" -o -name "*.aab" 2>/dev/null | head -n 10 || echo "No APK files found"

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: flask-android-app
          path: bin/*.apk
          if-no-files-found: error
